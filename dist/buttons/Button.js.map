{"version":3,"sources":["../../src/buttons/Button.js"],"names":["log","console","Button","props","linearGradientProps","ViewComponent","error","TouchableComponent","containerStyle","onPress","buttonStyle","clear","loading","loadingStyle","loadingProps","text","textStyle","textProps","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTextStyle","attributes","styles","container","undefined","borderRadius","button","backgroundColor","select","android","zero","web","color","size","iconContainer","disabledText","propTypes","string","style","object","bool","any","defaultProps","OS","create","justifyContent","alignItems","flexDirection","primary","four","two","padding","fontSize","textAlign","ios","fontWeight","marginHorizontal"],"mappings":"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","file":"Button.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Platform,\r\n} from 'react-native';\r\nimport colors from '../config/colors';\r\n\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\nimport elevation from '../config/elevation';\r\n\r\nconst log = () => {\r\n  /* eslint-disable no-console */\r\n  console.log('Please attach a method to this component');\r\n};\r\nclass Button extends Component {\r\n  componentDidMount() {\r\n    if (\r\n      this.props.linearGradientProps != null &&\r\n      this.props.ViewComponent == null\r\n    ) {\r\n      /* eslint-disable no-console */\r\n      console.error(\r\n        `You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('expo').LinearGradient}`\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ViewComponent,\r\n      TouchableComponent,\r\n      containerStyle,\r\n      onPress,\r\n      buttonStyle,\r\n      clear,\r\n      loading,\r\n      loadingStyle,\r\n      loadingProps,\r\n      text,\r\n      textStyle,\r\n      textProps,\r\n      icon,\r\n      iconContainerStyle,\r\n      iconRight,\r\n      disabled,\r\n      disabledStyle,\r\n      disabledTextStyle,\r\n      linearGradientProps,\r\n      ...attributes\r\n    } = this.props;\r\n\r\n    return (\r\n      <View style={[styles.container, containerStyle]}>\r\n        <TouchableComponent\r\n          {...attributes} \r\n          onPress={onPress}\r\n          activeOpacity={clear ? 0 : undefined}\r\n          style={{\r\n            borderRadius: buttonStyle.borderRadius,\r\n          }}\r\n          disabled={disabled}\r\n        >\r\n          <ViewComponent\r\n            {...linearGradientProps}\r\n            style={[\r\n              styles.button,\r\n              clear && {\r\n                backgroundColor: 'transparent',\r\n                ...Platform.select({\r\n                  android: elevation.android.zero,\r\n                  web: elevation.web.zero,\r\n                }),\r\n              },\r\n              buttonStyle,\r\n              linearGradientProps && { backgroundColor: 'transparent' },\r\n              disabled && styles.disabled,\r\n              disabled && disabledStyle,\r\n            ]}\r\n          >\r\n            {loading && (\r\n              <ActivityIndicator\r\n                animating={true}\r\n                style={[styles.loading, loadingStyle]}\r\n                color={loadingProps.color}\r\n                size={loadingProps.size}\r\n                {...loadingProps}\r\n              />\r\n            )}\r\n            {!loading &&\r\n              icon &&\r\n              !iconRight && (\r\n                <View style={[styles.iconContainer, iconContainerStyle]}>\r\n                  {icon}\r\n                </View>\r\n              )}\r\n            {!loading && \r\n              !!text && (\r\n                <Text style={[\r\n                  styles.text, \r\n                  textStyle,                   \r\n                  disabled && styles.disabledText,\r\n                  disabled && disabledTextStyle\r\n                  ]} \r\n                  {...textProps}\r\n                  >\r\n                  {text}\r\n                </Text>\r\n            )}\r\n            {!loading &&\r\n              icon &&\r\n              iconRight && (\r\n                <View style={[styles.iconContainer, iconContainerStyle]}>\r\n                  {icon}\r\n                </View>\r\n              )}\r\n          </ViewComponent>\r\n        </TouchableComponent>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  textStyle: Text.propTypes.style,\r\n  textProps: PropTypes.object,\r\n  buttonStyle: ViewPropTypes.style,\r\n  clear: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  loadingStyle: ViewPropTypes.style,\r\n  loadingProps: PropTypes.object,\r\n  onPress: PropTypes.any,\r\n  containerStyle: ViewPropTypes.style,\r\n  icon: PropTypes.object,\r\n  iconContainerStyle: ViewPropTypes.style,\r\n  iconRight: PropTypes.bool,\r\n  linearGradientProps: PropTypes.object,\r\n  TouchableComponent: PropTypes.any,\r\n  ViewComponent: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n  disabledStyle: ViewPropTypes.style,\r\n  disabledTextStyle: Text.propTypes.style,\r\n};\r\n\r\nButton.defaultProps = {\r\n  iconRight: false,\r\n  TouchableComponent:\r\n    Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity,\r\n  ViewComponent: View,\r\n  onPress: log,\r\n  clear: false,\r\n  loadingProps: {\r\n    color: 'white',\r\n    size: 'small',\r\n  },\r\n  buttonStyle: {\r\n    borderRadius: 3,\r\n  },\r\n  disabled: false,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 3,\r\n    backgroundColor: colors.primary,\r\n    ...Platform.select({\r\n      android: {\r\n        ...elevation.android.four,\r\n        borderRadius: 2,\r\n      },\r\n      web: {\r\n        ...elevation.web.two,\r\n      },\r\n    }),\r\n  },\r\n  loading: {\r\n    padding: 8,\r\n  },\r\n  disabled: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#D1D5D8',\r\n  },\r\n  disabledText: {\r\n    color: '#F3F4F5',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    padding: 8,\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    padding: 8,\r\n    ...Platform.select({\r\n      ios: {\r\n        fontSize: 18,\r\n      },\r\n      android: {\r\n        fontWeight: '500',\r\n      },\r\n    }),\r\n  },\r\n  iconContainer: {\r\n    marginHorizontal: 5,\r\n  },\r\n});\r\n\r\nexport default Button;\r\n"]}